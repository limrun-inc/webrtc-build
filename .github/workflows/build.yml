name: build

on:
  workflow_dispatch:
    inputs:
      commitHash:
        description: 'webrtc-sdk commit hash'
        default: ''
        required: true
      configuration:
        description: 'build configuration'
        default: 'release'
        required: true
        type: choice
        options:
          - release
          - debug
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - 'NOTICE'
      - '.gitignore'
      - '.dockerignore'
    branches-ignore:
      - daily
    tags:
      - '*'

permissions:
  packages: write
  contents: write
  actions: read

jobs:
  build-apple:
    defaults:
      run:
        working-directory: ./build
    strategy:
      fail-fast: false
      matrix:
        name:
          - apple
          - apple_prefixed
    runs-on: macos-15-xlarge
    steps:
    - uses: actions/checkout@v4
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 16.4
    - name: Build
      id: build
      run: ./build.${{ matrix.name }}.sh "${{ github.event.inputs.commitHash }}" "${{ github.event.inputs.configuration || 'release' }}"
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build.outputs.framework_name }}.xcframework.zip
        path: build/_package/${{ matrix.name }}/${{ steps.build.outputs.framework_name }}.xcframework.zip
  build-linux:
    defaults:
      run:
        working-directory: ./build
    strategy:
      fail-fast: false
      matrix:
        name:
          - android
          - android_prefixed
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
    - uses: actions/checkout@v4
    - name: Disk Cleanup
      run: |
        df -h
        docker container prune -f
        docker image prune -a -f
        # 3.9GB
        sudo rm -rf /usr/local/share/boost
        # 17GB
        sudo rm -rf /usr/share/dotnet
        df -h
    - run: ./build.${{ matrix.name }}.sh "${{ github.event.inputs.commitHash }}"
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: webrtc.${{ matrix.name }}.tar.gz
        path: build/_package/${{ matrix.name }}/webrtc.tar.gz
  create-release:
    name: Create Release
    if: github.ref_type == 'tag'
    needs:
      - build-apple
      - build-linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        path: artifacts
        name: webrtc.android_prefixed.tar.gz
    - uses: actions/download-artifact@v4
      with:
        path: artifacts
        name: LiveKitWebRTC.xcframework.zip
    - uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: artifacts/**
